계층 구조로 자료를 저장하는 트리
계층 구조란 트리를 구성하는 노드가 부모-자식 관계라는 의미
부모-자식 관계가 1:1이 아니라는 점에서 비선형 자료구조

트리는 노드와 간선의 집합이다.
노드는 시스템의 객체를 나타내며 간선은 객체들 사이의 관계를 정의

루트 노드, Leaf&Terminal 노드, 내부(Internal) 노드가 있고
관계 의미로는 부모 노드, 자식 노드, 선조 노드, 후손 노드, 형제 노드가 있습니다.

Level : 루트 노드로부터의 거리를 뜻하며 기준인 루트 노드는 1입니다.
Height : 루트 노드부터 가장 먼거리에 있는 자식 노드의 높이에 1을 더한 값 잎 노드의 높이는 1입니다.
Degree : 한 노드가 가지는 자식 노드의 개수

최대 2개까지만 자식 노드를 가질 수 있는 트리를 이진 트리(Binary Tree)라고 합니다.
왼쪽 자식 노드를 루트 노드로 하는 서브트리를 왼쪽 서브트리 라 하며,
반대는 오른쪽 서브트리 라고 합니다.
n개의 노드를 가지는 이진 트리는 모두 n-1개의 간선을 가집니다.

이진 트리의 종류로는 (포화 이진 트리, 완전 이진 트리, 편향 이진 트리)가 있습니다.
포화 이진 트리 : 모든 레벨의 노드가 꽉 찬 이진 트리
완전 이진 트리 : 레벨 1부터 h-1 까지 포화 이진 트리와 똑같지만 레벨 h에서는 왼쪽에서 오른쪽으로 노드가 채워진 이진 트리
편향 이진 트리 : 같은 높이의 이진 트리 중에서 최소 개수의 노드 개수를 가지는 이진 트리로 서브트리가 한쪽으로 치우쳐져 있다.

배열을 이용한 이진 트리의 구현에서는 노드 번호가 배열의 인덱스 역할을 하며 루트는 1이므로 0번은 비워져 있다.
노드 i의 부모 인덱스는 i/2
노드 i의 왼쪽 자식 노드 인덱스는 i*2
노드 i의 오른쪽 자식 노드 인덱스는 i*2+1
배열을 이용한 구현은 메모리 낭비가 심하고 포인터를 이용한 구현은 복잡하다

트리의 순회란 트리의 모든 노드를 한 번씩 방문하는 것을 말한다.
트리는 계층 구조를 가지고 있기 때문에 여러 가지 순회 방법이 가능하다
순회 방법으로는 (전위 순회, 중위 순회, 후위 순회) 과 레벨 순회가 있다.

이진 트리의 순회 방법을 구현할 때는 1) 재귀 호출에 의한 구현과 2) 반복에 의한 구현이 있다.

