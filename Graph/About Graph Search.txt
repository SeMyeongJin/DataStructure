그래프의 탐색은 간선을 이용하여 그래프 상의 모든 노드를 한번씩 방문하는 것

그래프의 탐색의 방법으로 가장 대표적인 두 가지가

깊이 - 우선(DFS : Depth-First Search) 방법과, 너비-우선(BFS : Breadth-First Search) 방법입니다.

깊이 - 우선 탐색을 먼저 살펴보겠습니다.
DFS는 재귀 호출을 이용해서 아주 직관적이고 손쉽게 구현할 수 있지만, 성능상의 문제를 발생시킬 수 있으므로

재귀호출이 아닌 스택을 이용한 비재귀적 방식에 의해 구현해 보기로 하겠습니다.

1) 각 노드의 방문 여부를 저장하는 1차원 배열과 2) 깊이 우선을 가능하게 하는 스택이 있다고 가정하겠습니다.

루트(시작) 노드부터 탐색하여 간선으로 연결된 노드를 스택에 Push 합니다.

push를 하고난 후에 pop을 하여 pop한 노드와 간선으로 연결된 노드를 push합니다. 이 방식을 반복하는데 방문하지 않았던 노드들만 push하여

탐색을 실시하면 됩니다.

의사 코드로 표현하면

traversal_DFS(node v) {
스택 s;

v <- 방문;
push(s, v);

while(not is_empty(S)) {
u <- pop(S);
for (u와 인접한 모든 노드 w에 대하여)
if (w != 방문) 
w <- 방문;
push(S, w);


너비 - 우선 탐색을 살펴보도록 하겠습니다.
BFS는 큐를 통하여 구현됩니다.

DFS와 마찬가지로 각 노드의 방문 여부를 저장하는 1차원 배열이 추가로 필요합니다.

traversal_BFS (node v)
큐 Q;
v<- 방문;
enqueue(Q,V);
while(not is_empty(Q))
u <- dequeue(Q);
for (u의 인접한 모든 노드 w에 대하여)
if (w != 방문)
w<- 방문;
enqueue(Q,W);

 