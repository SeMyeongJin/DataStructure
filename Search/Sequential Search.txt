순차 검색은 검색하려는 자료들이 
미리 정렬되어 있지 않은 경우와 자료들이 미리 정렬된 경우로 나눌 수 있습니다.

미리 정렬된 경우라면 색인(Index)을 활용하여 검색의 효율성을 높일 수 있습니다.

정렬되지 않은 경우 검색 실패 여부는 자료의 제일 마지막 원소까지 비교해야만 알 수 있습니다.

정렬된 경우 검색 실패 여부는 자료의 마지막 원소까지 비교하지 않아도 알 수 있습니다.



색인 순차 검색

자료가 미리 정렬된 경우에 인덱스 테이블을 이용하여 검색의 효율을 높일 수 있습니다.

인덱스 테이블은 정렬된 자료를 일정 간격으로 저장하기 때문에, 찾아야 하는 전체 자료의 개수를 감소시키는 역할



이진 검색 (Binary Search)

미리 정렬된 자료를 대상으로 검색 범위를 반으로 감소시키는 과정을 반복하여 검색 키를 찾습니다.



해싱은 검색 키에 대한 산술 연산을 이용한 검색 방식입니다.

검색 키 값만으로 원하는 자료의 위치를 직접 계산할 수 있다는 점에서 차이가 있습니다.

해싱의 산술 연산을 다른 말로 해싱 함수라고 합니다.

해싱 함수에 의해 계산된 주소에 따라 자료를 저장하는 자료 구조를 해시 테이블이라고 합니다.

계산된 주소에 다른 자료가 저장되어 있다면 충돌이 발생합니다.

해싱 검색의 효율성을 측정하는 지표는
(충돌 발생 빈도, 해시 테이블 사용률, 해싱 함수 계산 속도)

해싱 함수의 종류

1. 나머지(제산) 함수 = 소수를 권장

2. 접기 함수
1) 이동 접기 함수
232112321 3자리씩 끊어서 232/112/321 각자리수 더한 665이 나옵니다
2) 경계 접기 함수
232112321 3자리씩 끊은뒤 간격을 두고 뒤집어서 232/211/321 각 자릿수 더한 값이 테이블 인덱스 값입니다.

3. 중간 제곱 함수
검색 키를 제곱한 값에서 중간 부분을 해시 테이블 주소로 이용하는 방법

4. 숫자 분석 방법
B 377 041 각 자릿수의 분포를 미리 분석하여 해시 주소로 사용하는 방법


충돌 해결 방법

1. 개방 주소법
특정 주소들 주위로 뭉치게 되는 현상 (군집화)이 발생할 수 있습니다.

1) 선형 조사법
충돌이 발생할 경우 주소를 일정한 상수만큼 증가
	
2) 제곱 조사법
n차 충돌에서 n제곱을 더해주는 방법입니다.

3) 이중 해싱
충돌이 발생할 경우 주소를 원래의 해싱 함수와는 다른 추가적인 해싱 함수를 이용해 주소를 증가시켜 다시 조사하는 방법.


2. 체이닝 
해시 테이블의 구조를 변경하여 각 주소에 하나 이상의 검색 키 값이 저장될 수 있도록 하는 방법입니다.
연결리스트를 이용하여 같은 주소를 가질 경우 Link 설정합니다.


균형 이진 탐색 트리

AVL (LL, LR, RL, RR)

다원 탐색 트리 => B-Tree

루트 노드는 단말 노드이거나, 2에서 m개의 서브 트리를 가진다.
루트 노드를 제외한 모든 내부 노드는 아래 개수만큼 서브트리를 가집니다.
m/2 <= 서브트리의 개수 <= m
단말 노드는 아래 개수만큼 자료를 가집니다.
m/2 - 1 <= 자료의 개수 <= m - 1
모든 단말 노드는 같은 레벨에 있습니다. 트리는 완전한 균형 상태에 있도록 합니다.