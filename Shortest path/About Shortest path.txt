최단 경로 문제는 주어진 두 노드 사이의 경로들 중에서 최소의 비용으로 이동할 수 있는 경로를 찾는 문제입니다.

최단 경로는 여러 경로 중에서 노드 사이의 거리가 가장 작은 경로를 말합니다.

최단 경로는 노드 사이의 거리 혹은 비용이 있어야만 구할 수 있기 때문에 가중 그래프를 대상으로 구하게 됩니다.

최단 경로를 구하는 문제를 세분화하면 다음과 같이 크게 세 가지 종류로 나눌 수 있습니다.

1) 단일 시작점에서 최단 경로 구하기 : 가장 기본이 되는 문제
2) 모든 최단 경로 구하기 : 모든 노드에서 다른 모든 노드 사이의 최단 경로를 구하는 문제
3) 도달 가능성 구하기 : 방향 그래프인 경우 특정 노드에서 다른 노드 사이에 경로가 존재하는지를 판단하는 문제

단일 시작점에서 최단 경로 구하기 : Dijkstra 다익스트라 알고리즘

시작 노드를 제외한 그래프의 모든 노드를 집합 S에 포함합니다.

집합 S중에 시작 노드와 연결된 노드 중 최단 거리를 가지는 노드를 택해, 집합 S에서 제거합니다.

택한 노드에 대해 시작 노드와 연결된 다른 노드에 대해서 다음 조건 검사를 실시합니다.

시작 노드와 다른 노드 사이의 거리보다 택한 노드와 다른 노드의 거리와 택한 노드와 시작 노드의 거리 합이 작다면 

작은 값으로 갱신합니다.

모든 최단 경로 구하기 : Floyd 알고리즘

시작 노드(전체)에 대해서 도착 노드(전체)에 대해 거리 (가중치의 값)를 설정합니다.

자기 자신은 0으로 만들고 직접적으로 연결되지 않은 노드는 무한대로 설정합니다.

중간 노드 v가 모든 노드가 될 경우에 대해 시작 노드에서 도착 노드 행렬 값을 입력합니다.

작은 값으로 갱신될 경우 행렬 값을 작은 값으로 입력합니다.

